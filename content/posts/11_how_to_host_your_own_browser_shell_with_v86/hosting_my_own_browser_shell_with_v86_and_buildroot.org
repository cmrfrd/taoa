#+TITLE: Hosting a browser shell with v86 and buildroot
#+CREATED: <2022-10-31 Mon>
#+LAST_MODIFIED: [2022-11-01 Tue 16:14]
#+ROAM_TAGS: composition
#+OPTIONS: toc:nil
#+OPTIONS: tex:t
#+OPTIONS: _:nil ^:nil p:nil

#+HUGO_BASE_DIR: ./
#+hugo_front_matter_format: yaml
#+HUGO_CUSTOM_FRONT_MATTER: :date (org-to-blog-date (org-global-prop-value "CREATED"))
#+HUGO_CUSTOM_FRONT_MATTER: :hero ./images/hero.jpg
#+HUGO_CUSTOM_FRONT_MATTER: :secret false
#+HUGO_CUSTOM_FRONT_MATTER: :excerpt Click -> OS

#+BEGIN_SRC emacs-lisp :exports none
  (defun org-hugo-link (link contents info) (org-md-link link contents info))

  ;; Setup org/latex exporting
  (add-to-list 'org-export-filter-latex-fragment-functions
               'sub-paren-for-dollar-sign)
  (add-to-list 'org-export-filter-headline-functions
               'remove-regexp-curly-braces)
  (add-to-list 'org-export-filter-latex-environment-functions
               'sub-paren-for-dollar-sign)
  (export-to-mdx-on-save)
#+END_SRC

#+RESULTS:
: Enabled mdx on save

Recently I rediscovered [[https://github.com/copy/v86][v86]] and after browsing through the examples, I thought
it would be cool to "self host" my own browser shell / OS. So I gave it a try
and am happy to show TAOA Shell! [[[https://github.com/cmrfrd/taoa.shell][source]]]

#+begin_export md
export const clickHandler = e => {
  location.href="/shell";
}

<div onClick={clickHandler} style="display: block;margin: 0px auto 0px;">
     <MediumButton text="To TAOA Shell" />
</div>
#+end_export

With the amazingly simple interface of v86, anyone can have an extremely
accessible OS in their browser for near zero cost!

This is possible because v86 emulates an x86 computer with WebAssembly and
Javascript. Since these are just static assets, they can run in almost any
browser and be hosted on a number of platforms, such GitHub pages, Netlify, and
Digital Ocean, for free!

Now unfortunately the v86 emulator is slow compared to bare metal (sometimes a
10-100x slowdown). But it's fast enough and usable for a lot of tasks!

Now not only is this cool, but there is a _real_ personal use case I care about,
which is the ability to self host my side projects that _aren't_ naturally web
based.

For example: my last weekend side project was about [[/posts/Writing-a-Weaver-solver][solving weaver]]. Now if
people want to use the solver script, they'd have to copy the code, download the
weaver graph, and run it. But now, with the click of a link, they can just try
it in TAOA Shell to see it in action.

I didn't have to rewrite it into Javascript or host a server somewhere. Instead
I just dump the code into TAOA Shell, and ‚ú®like magic‚ú® it's on the internet!

There's also the added benefit of this generalizing beyond python scripts to
almost anything that can run in Linux!

Thanks for reading! üôãüèº
