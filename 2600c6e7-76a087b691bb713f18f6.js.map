{"version":3,"file":"2600c6e7-76a087b691bb713f18f6.js","mappings":"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","sources":["webpack://TAOA/./src/components/Navigation/Navigation.Header.tsx"],"sourcesContent":["import { GridLayoutContext } from '../../sections/posts/Posts.List.Context';\nimport ArrowIcon from './Navigation.Arrow';\n\nimport Headings from '@components/Headings';\nimport Logo from '@components/Logo';\nimport Section from '@components/Section';\nimport useStickyOnScrolled from '@components/UseStickyScroll';\nimport Icons from '@icons';\nimport mediaqueries, { mediaquery } from '@styles/media';\nimport { ITAOAThemeUIContext } from '@types';\nimport { copyToClipboard, getWindowDimensions, getBreakpointFromTheme, theme } from '@utils';\n\nimport styled from '@emotion/styled';\nimport * as CSS from 'csstype';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Link } from 'gatsby';\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { useColorMode } from 'theme-ui';\n\ninterface IGridRowToggle {\n  active: boolean;\n}\n\n/* GridRowToggle is a component that toggles between two\n * layouts of posts\n */\nconst GridRowToggle: React.FC<IGridRowToggle> = (props: IGridRowToggle) => {\n  const { active } = props;\n  const { gridLayout = 'tiles', setGridLayout } = useContext(GridLayoutContext);\n  const rowsIsActive = gridLayout === 'tiles';\n\n  const [activeInLargeFormat, setActiveInLargeFormat] = useState<boolean>(true);\n\n  const handleWindowResize = (): void => {\n    const { width } = getWindowDimensions();\n    const breakpoint = getBreakpointFromTheme('tablet');\n    setActiveInLargeFormat(width > breakpoint);\n  };\n\n  useEffect((): (() => void) => {\n    window.addEventListener('resize', handleWindowResize);\n    return (): void => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, []);\n\n  return (\n    <IconWrapper isDark={false}>\n      {rowsIsActive ? (\n        <GridButton\n          onClick={(): void => {\n            if (active && activeInLargeFormat) setGridLayout('rows');\n          }}\n          active={active && activeInLargeFormat}\n          data-a11y={false}\n          title=\"Show posts in Row grid\"\n          aria-label=\"Show posts in Row grid\"\n        >\n          <Icons.Rows />\n        </GridButton>\n      ) : (\n        <GridButton\n          onClick={(): void => {\n            if (active && activeInLargeFormat) setGridLayout('tiles');\n          }}\n          active={active && activeInLargeFormat}\n          data-a11y={false}\n          title=\"Show posts in Tile grid\"\n          aria-label=\"Show posts in Tile grid\"\n        >\n          <Icons.Tiles />\n        </GridButton>\n      )}\n    </IconWrapper>\n  );\n};\n\n/* DarkModeToggle is a component that toggles between two\n * color themes\n */\nconst DarkModeToggle: React.FC<{}> = () => {\n  const [colorMode, setColorMode] = useColorMode();\n  const isDark = colorMode === `dark`;\n\n  /* Toggle function to switch from light and dark */\n  function toggleColorMode(event: React.MouseEvent<HTMLElement>): void {\n    event.preventDefault();\n    setColorMode(isDark ? `light` : `dark`);\n  }\n\n  return (\n    <IconWrapper\n      isDark={isDark}\n      onClick={toggleColorMode}\n      data-a11y={false}\n      aria-label={isDark ? 'Activate light mode' : 'Activate dark mode'}\n      title={isDark ? 'Activate light mode' : 'Activate dark mode'}\n    >\n      <MoonOrSun isDark={isDark} />\n    </IconWrapper>\n  );\n};\n\nconst ShellLink: React.FC<{}> = () => {\n  const [colorMode] = useColorMode();\n  const isDark = colorMode === `dark`;\n  const fill = isDark ? '#fff' : '#000';\n  const invFill = isDark ? '#000' : '#fff';\n  return (\n    <IconWrapper\n      isDark={isDark}\n      data-a11y={false}\n      aria-label={'Go to the TAOA shell'}\n      title={'Go to the TAOA shell'}\n    >\n      <a href=\"/shell\">\n        <Icons.ShellIcon fill={fill} invFill={invFill} />\n      </a>\n    </IconWrapper>\n  );\n};\n\n/* SharePageButton is a component that when clicked\n * will copy the current URL to the clipboard\n */\nconst SharePageButton: React.FC<{}> = () => {\n  const [hasCopied, setHasCopied] = useState<boolean>(false);\n  const [colorMode] = useColorMode();\n  const isDark = colorMode === `dark`;\n  const fill = isDark ? '#fff' : '#000';\n\n  function copyToClipboardOnClick(): void {\n    if (hasCopied) return;\n\n    copyToClipboard(window.location.href);\n    setHasCopied(true);\n\n    setTimeout(() => {\n      setHasCopied(false);\n    }, 1000);\n  }\n\n  return (\n    <IconWrapper\n      isDark={isDark}\n      onClick={copyToClipboardOnClick}\n      data-a11y={false}\n      aria-label=\"Copy URL to clipboard\"\n      title=\"Copy URL to clipboard\"\n    >\n      <Icons.Link fill={fill} />\n      <ToolTip isDark={isDark} hasCopied={hasCopied}>\n        Copied\n      </ToolTip>\n    </IconWrapper>\n  );\n};\n\ninterface INavigationHeader {\n  enableGridRow: boolean;\n  initialArrowUp: boolean;\n}\n\n/* NavigationHeader contained the associated links and widgets to control\n * navigation, color, and layout\n */\nconst NavigationHeader: React.FC<INavigationHeader> = (props: INavigationHeader) => {\n  /* initial paramaters for the nav header */\n  const { enableGridRow, initialArrowUp } = props;\n\n  /* When in mobile view sets the inital direction of the menu arrow */\n  const [arrowUp, setArrowUp] = useState<boolean>(initialArrowUp);\n\n  /* Check if the app is mobile or desktop */\n  const { width } = getWindowDimensions();\n  const breakpoint = getBreakpointFromTheme('phablet');\n  const [showArrow, setShowArrow] = useState<number>(+(width <= breakpoint));\n\n  /* Function to handle turning the UI from a desktop view to\n   * a mobile view.\n   *\n   * This is done via theme-ui breakpoints\n   */\n  const handleWindowResize = (): void => {\n    const { width } = getWindowDimensions();\n    const breakpoint = getBreakpointFromTheme('phablet');\n    const willShowArrow = width <= breakpoint;\n\n    // When the arrow is removed, set it to the up position\n    if (!willShowArrow) {\n      setArrowUp(false);\n    }\n\n    setShowArrow(+willShowArrow);\n  };\n\n  /* React hook to call function that will\n   * handle mobile vs desktop view\n   */\n  useEffect((): (() => void) => {\n    window.addEventListener('resize', handleWindowResize);\n    return (): void => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, []);\n\n  /* These are the React refs that keep track of\n   * the components when clicked will minimize the menu\n   */\n  const arrowRef = useRef(null);\n  const menuRef = useRef(null);\n\n  /* Listener to minimize the menu on mouse click outside the menu */\n  useEffect((): (() => void) => {\n    const menuf: { (event: MouseEvent): void } = (event: MouseEvent): void => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setArrowUp(false);\n      }\n    };\n\n    window.addEventListener('mousedown', menuf);\n    return (): void => {\n      window.removeEventListener('mousedown', menuf);\n    };\n  }, [menuRef, arrowRef]);\n\n  const stickyHeader = useStickyOnScrolled();\n\n  const arrowMenuMotion = {\n    initial: {\n      opacity: 0,\n      y: -10\n    },\n    animate: {\n      opacity: 1,\n      y: 10\n    },\n    exit: {\n      opacity: 0,\n      y: -10\n    },\n    transition: {\n      duration: 0.2\n    }\n  };\n\n  return (\n    <HeaderSticky sticky={stickyHeader}>\n      <HeaderSection>\n        <NavContainer>\n          <LogoLink\n            to={'/'}\n            data-a11y={false}\n            title=\"Navigate back to the homepage\"\n            aria-label=\"Navigate back to the homepage\"\n            state={{ arrowUp: arrowUp }}\n          >\n            <Logo />\n          </LogoLink>\n          {showArrow ? (\n            <div ref={menuRef}>\n              <ArrowIconContainer\n                data-a11y={false}\n                title=\"Hide/Display menu\"\n                aria-label=\"Hide/Display menu\"\n                ref={arrowRef}\n                onClick={(): void => {\n                  setArrowUp(!arrowUp);\n                }}\n              >\n                <ArrowIcon isOpen={arrowUp} />\n              </ArrowIconContainer>\n              <AnimatePresence initial={false}>\n                {arrowUp && (\n                  <motion.div {...arrowMenuMotion}>\n                    <MenuContainer>\n                      <MenuNav>\n                        <NavLinks arrow={showArrow}>\n                          <VSpacer />\n                          <NavLink\n                            to={'/about'}\n                            arrow={showArrow}\n                            state={{ arrowUp: arrowUp }}\n                            data-a11y={false}\n                            title=\"Navigate to the about page\"\n                            aria-label=\"Navigate to the about page\"\n                          >\n                            <NavLinkText arrow={showArrow}>About</NavLinkText>\n                          </NavLink>\n                        </NavLinks>\n                        <Horizontal />\n                        <NavControls>\n                          <>\n                            <ShellLink />\n                            <GridRowToggle active={false} />\n                            <SharePageButton />\n                            <DarkModeToggle />\n                          </>\n                        </NavControls>\n                      </MenuNav>\n                    </MenuContainer>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </div>\n          ) : (\n            <>\n              <NavLinks arrow={showArrow}>\n                <HSpacer />\n                <NavLink\n                  to={'/about'}\n                  arrow={showArrow}\n                  state={{ arrowUp: arrowUp }}\n                  data-a11y={false}\n                  title=\"Navigate to the about page\"\n                  aria-label=\"Navigate to the about page\"\n                >\n                  <NavLinkText arrow={showArrow}>About</NavLinkText>\n                </NavLink>\n              </NavLinks>\n              <NavControls>\n                <>\n                  <ShellLink />\n                  <GridRowToggle active={enableGridRow} />\n                  <SharePageButton />\n                  <DarkModeToggle />\n                </>\n              </NavControls>\n            </>\n          )}\n        </NavContainer>\n      </HeaderSection>\n    </HeaderSticky>\n  );\n};\n\nexport default NavigationHeader;\n\ninterface IHeaderStickyProps extends ITAOAThemeUIContext {\n  sticky: boolean;\n}\n\nconst HeaderSticky = styled.div((p: IHeaderStickyProps) =>\n  p.sticky\n    ? {\n        width: '100%',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        opacity: 1,\n        zIndex: 100,\n        transition: theme.colorModeTransition,\n        paddingTop: '8px',\n        paddingBottom: '8px',\n        boxShadow: `3px 5px 2px 0px ${p.theme.colors.tintHover}`,\n        backgroundColor: p.theme.colors.tintBackground,\n        [mediaquery.desktop()]: {\n          paddingTop: '8px',\n          paddingBottom: '8px'\n        },\n        [mediaquery.tablet()]: {\n          paddingTop: '6px',\n          paddingBottom: '6px'\n        },\n        [mediaquery.phablet()]: {\n          paddingTop: '6px',\n          paddingBottom: '6px'\n        }\n      }\n    : {\n        width: '100%',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        opacity: 1,\n        zIndex: 100,\n        paddingTop: '16px',\n        paddingBottom: '16px',\n        transition: theme.colorModeTransition,\n        backgroundColor: p.theme.colors.background\n      }\n);\n\nconst HeaderSection = styled(Section)({\n  /* [mediaquery.tablet()]: {\n   *   maxWidth: 'none',\n   *   padding: '0 20px'\n   * },\n   * [mediaquery.desktop()]: {\n   *   maxWidth: 'none',\n   *   padding: '0 20px'\n   * } */\n});\n\nconst Horizontal = styled.div((p: ITAOAThemeUIContext) => ({\n  position: 'relative',\n  borderBottom: `1px solid ${p.theme.colors.horizontalNav}`,\n  zIndex: 0,\n\n  [mediaquery.tablet()]: {\n    margin: '5px 15px 5px'\n  }\n}));\n\nconst ArrowIconContainer = styled.div(() => ({\n  position: 'relative',\n  display: 'flex'\n}));\n\nconst MenuContainer = styled.div({\n  top: '15px',\n  right: 'calc((40px + 2rem) - (1rem + 60px))',\n  width: 'calc(2 * (1rem + 60px))',\n\n  position: 'absolute',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center'\n});\n\nconst MenuNav = styled.nav((p: ITAOAThemeUIContext) => ({\n  backgroundColor: p.theme.colors.tintBackground,\n  borderRadius: '5px',\n  boxShadow: `rgba(0,0,0,.11) 0 0 0 1px, rgba(0,0,0,.05) 0 10px 10px -5px`,\n  border: '0px',\n  paddingBottom: '5px',\n  transition: p.theme.colorModeTransition\n}));\n\nconst NavContainer = styled.div({\n  zIndex: 100,\n  display: 'flex',\n  justifyContent: 'space-between'\n});\n\nconst LogoLink = styled(Link)((p: ITAOAThemeUIContext) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n\n  [mediaquery.desktop_medium()]: {\n    left: 0\n  },\n\n  '&[data-a11y=\"true\"]:focus::after': {\n    content: '\"\"',\n    position: 'absolute',\n    left: '-10%',\n    top: '-30%',\n    width: '120%',\n    height: '160%',\n    border: `2px solid ${p.theme.colors.accent}`,\n    background: 'rgba(255, 255, 255, 0.01)',\n    borderRadius: '5px'\n  },\n\n  '&:hover': {}\n}));\n\ninterface INavLinks extends ITAOAThemeUIContext {\n  arrow: number;\n}\n\nconst NavLinks = styled.div((p: INavLinks) => ({\n  position: 'relative',\n  display: 'flex',\n  align: p.arrow ? 'none' : 'left',\n  flexDirection: p.arrow ? 'column' : 'row',\n  marginRight: 'auto',\n\n  [mediaquery.phablet()]: {\n    marginLeft: '0%',\n    right: '-1px'\n  }\n}));\n\nconst NavControls = styled.div(() => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center'\n}));\n\nconst VSpacer = styled.div({\n  height: '5px'\n});\n\nconst HSpacer = styled.div({\n  width: '5px'\n});\n\ninterface INavLink extends ITAOAThemeUIContext {\n  arrow: number;\n}\n\nconst NavLink = styled(Link)((p: INavLink) => ({\n  position: 'relative',\n  alignItems: 'center',\n  display: 'flex',\n  flexDirection: 'column',\n  transition: 'all 0.25s ease-in-out 0s',\n  margin: '0px 4px 0px 4px',\n  borderRadius: '2px',\n\n  paddingBottom: p.arrow ? '6px' : '0px',\n  paddingTop: p.arrow ? '5px' : '0px',\n  [mediaquery.phablet()]: {\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  '&:hover': {\n    backgroundColor: `${p.theme.colors.hoverGrey}`\n  }\n}));\n\ninterface INavLinkText extends ITAOAThemeUIContext {\n  arrow: number;\n}\n\nconst NavLinkText = styled(Headings.h2)(\n  (p: INavLinkText) => `\n    font-family: ${p.theme.fonts.serif};\n    transition: ${p.theme.colorModeTransition};\n    font-size: 20px;\n    font-weight: 600;\n    padding: 0 12px;\n    margin: auto auto;\n\n    ${mediaquery.desktop_large()} {\n        font-size: 20px;\n    };\n\n    ${mediaquery.desktop()} {\n        font-size: 20px;\n    };\n\n    ${mediaquery.tablet()} {\n        padding: 0 10px;\n        font-size: 16px;\n    };\n\n    ${mediaquery.phablet()} {\n        font-size: 14px;\n    };\n    ${mediaquery.phone_large()} {\n    };\n    `\n);\n\ninterface IToolTip extends ITAOAThemeUIContext {\n  isDark: boolean;\n  hasCopied: boolean;\n}\n\nconst ToolTip = styled.div((p: IToolTip) => ({\n  position: 'absolute',\n  padding: '3px 10px',\n  background: p.isDark ? '#000' : p.theme.colors.background,\n  color: p.isDark ? '#fff' : '#000',\n  borderRadius: '3px',\n  fontSize: '10px',\n  top: '-20px',\n  opacity: p.hasCopied ? 1 : 0,\n  transform: p.hasCopied ? 'translateY(-3px)' : 'none',\n  transition: p.theme.colorModeTransition,\n  zIndex: 100,\n\n  '&::after': {\n    content: '\"\"',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: '-6px',\n    margin: '0 auto',\n    width: 0,\n    height: 0,\n    borderLeft: '6px solid transparent',\n    borderRight: '6px solid transparent',\n    borderTop: `6px solid ${p.isDark ? '#000' : p.theme.colors.background}`\n  }\n}));\n\ninterface IIconWrapper extends ITAOAThemeUIContext {\n  isDark: boolean;\n}\n\nconst IconWrapper = styled.div((p: IIconWrapper) => ({\n  opacity: 0.5,\n  position: 'relative',\n  borderRadius: '5px',\n  width: '40px',\n  height: '30px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  transition: 'opacity 0.3s ease',\n  marginLeft: '25px',\n\n  [mediaquery.phone()]: {\n    marginLeft: '2px'\n  },\n\n  [mediaquery.phablet()]: {\n    marginLeft: '10px'\n  },\n\n  [mediaquery.tablet()]: {\n    marginLeft: '2px',\n    display: 'inline-flex',\n    transform: 'scale(0.708)',\n    '&:hover': {\n      opacity: 0.5\n    }\n  },\n\n  '&:hover': {\n    opacity: 1\n  },\n\n  \"&[data-a11y='true']:focus::after\": {\n    content: '\"\"',\n    position: 'absolute',\n    left: 0,\n    top: '-30%',\n    width: '100%',\n    height: '160%',\n    border: `2px solid ${p.theme.colors.accent}`,\n    background: 'rgba(255, 255, 255, 0.01)',\n    borderRadius: '5px'\n  }\n}));\n\nconst GridButton = styled.button((p: ITAOAThemeUIContext) => ({\n  outline: 0,\n  border: 0,\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  height: '36px',\n  width: '36px',\n  borderRadius: '50%',\n  background: 'transparent',\n  transition: 'background 0.25s',\n\n  '&:not(:last-child)': {\n    marginRight: '30px'\n  },\n\n  '&:hover': {\n    background: p.theme.colors.hover\n  },\n\n  \"&[data-a11y='true']:focus::after\": {\n    content: '\"\"',\n    position: 'absolute',\n    left: '-10%',\n    top: '-10%',\n    width: '120%',\n    height: '120%',\n    border: '2px solid p.theme.colors.accent',\n    background: 'rgba(255, 255, 255, 0.01)',\n    borderRadius: '50%'\n  },\n\n  svg: {\n    opacity: p.active ? 1 : 0.25,\n    transition: 'opacity 0.2s',\n\n    path: {\n      fill: p.theme.colors.primary\n    }\n  }\n}));\n\ninterface IMoonOrSun extends ITAOAThemeUIContext {\n  isDark: boolean;\n}\n\n// This is based off a codepen! Much appreciated to: https://codepen.io/aaroniker/pen/KGpXZo\nconst MoonOrSun = styled.div(\n  (p: IMoonOrSun) => `\n    position: relative;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    border: ${p.isDark ? '4px' : '2px'} solid ${p.theme.colors.primary};\n    background: ${p.theme.colors.primary};\n    transform: scale(${p.isDark ? 0.55 : 1});\n    transition: all 0.45s ease;\n    overflow: ${p.isDark ? 'visible' : 'hidden'};\n\n                            &::before {\n                                outline: 0;\n                                border: 0;\n                                content: ' ';\n                                position: absolute;\n                                right: -9px;\n                                top: -9px;\n                                height: 24px;\n                                width: 24px;\n                                border: 2px solid ${p.theme.colors.primary};\n                                border-radius: 50%;\n                                transform: translate(${p.isDark ? '14px, -14px' : '0, 0'});\n                                opacity: ${p.isDark ? 0 : 1};\n                                transition: transform 0.45s ease;\n                                background: radial-gradient(\n                                    ellipse farthest-corner at 33% 100%,\n                                    ${p.theme.colors.secondary} 50%,\n                                    ${p.theme.colors.secondary} 50%\n                                );\n                            }\n\n                            &::after {\n                                content: ' ';\n                                width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    margin: -4px 0 0 -4px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    box-shadow: 0 -23px 0 ${p.theme.colors.primary}, 0 23px 0 ${p.theme.colors.primary},\n      23px 0 0 ${p.theme.colors.primary}, -23px 0 0 ${p.theme.colors.primary},\n      15px 15px 0 ${p.theme.colors.primary}, -15px 15px 0 ${p.theme.colors.primary},\n      15px -15px 0 ${p.theme.colors.primary}, -15px -15px 0 ${p.theme.colors.primary};\n    transform: scale(${p.isDark ? 1 : 0});\n    transition: all 0.35s ease;\n\n    ${mediaqueries.tablet`\n    transform: scale(${p.isDark ? 0.92 : 0});\n    `}\n  }\n    `\n);\n"],"names":["GridRowToggle","props","active","useContext","GridLayoutContext","gridLayout","setGridLayout","rowsIsActive","useState","activeInLargeFormat","setActiveInLargeFormat","handleWindowResize","width","getWindowDimensions","breakpoint","getBreakpointFromTheme","useEffect","window","addEventListener","removeEventListener","IconWrapper","isDark","GridButton","onClick","title","DarkModeToggle","useColorMode","colorMode","setColorMode","event","preventDefault","MoonOrSun","ShellLink","fill","invFill","href","SharePageButton","hasCopied","setHasCopied","copyToClipboard","location","setTimeout","ToolTip","enableGridRow","initialArrowUp","arrowUp","setArrowUp","showArrow","setShowArrow","willShowArrow","arrowRef","useRef","menuRef","menuf","current","contains","target","stickyHeader","useStickyOnScrolled","HeaderSticky","sticky","HeaderSection","NavContainer","LogoLink","to","state","ref","ArrowIconContainer","isOpen","initial","opacity","y","animate","exit","transition","duration","MenuContainer","MenuNav","NavLinks","arrow","VSpacer","NavLink","NavLinkText","Horizontal","NavControls","HSpacer","p","position","top","left","right","zIndex","theme","paddingTop","paddingBottom","boxShadow","colors","tintHover","backgroundColor","tintBackground","mediaquery","background","Section","borderBottom","horizontalNav","margin","display","borderRadius","border","colorModeTransition","Link","alignItems","content","height","accent","align","flexDirection","marginRight","marginLeft","hoverGrey","Headings","fonts","serif","padding","color","fontSize","transform","bottom","borderLeft","borderRight","borderTop","justifyContent","outline","hover","svg","path","primary","secondary","mediaqueries"],"sourceRoot":""}