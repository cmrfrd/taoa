{"version":3,"file":"927a8828-efcae082f335cc0468a7.js","mappings":"6RAiGA,IA/C6C,SAAC,GAKtB,IAJtBA,EAIqB,EAJrBA,MACAC,EAGqB,EAHrBA,qBACAC,EAEqB,EAFrBA,YACAC,EACqB,EADrBA,UAEA,IAAKH,EAAO,OAAO,KAEnB,IAAQI,GAAeC,EAAAA,EAAAA,YAAWC,EAAAA,GAA1BF,WACAG,GACNC,EAAAA,EAAAA,gBA1BW,cA0BeC,QAAQC,MAAM,GAAGC,KAAKC,aAAaC,WADvDN,gCAUR,OACE,QAACO,EAAD,CAAoBb,qBAAsBA,IACxC,QAAC,IAAD,CACEc,qBAAsB,CAAEC,SAAS,EAAOC,iBAAiB,GACzDC,UAAWhB,EACXiB,SAAUZ,IAEV,QAAC,IAAD,CACEQ,qBAAsB,CAAEE,iBAAiB,GACzCC,UAAWd,EACXe,SAAUZ,IAEV,QAAC,IAAD,CACEQ,qBAAsB,CAAEE,iBAAiB,GACzCC,UAAWd,EACXe,SAAUZ,EACVa,YAAa,CACXC,QAASlB,EAAY,OAAS,WAGhC,QAACmB,EAAD,CAAqBC,IAAKnB,EAAYA,WAAYA,EAAYJ,MAAOA,OAMhF,EASD,IAAMsB,EAA2D,SAAC,GAIhC,IAHhCtB,EAG+B,EAH/BA,MACAI,EAE+B,EAF/BA,YAE+B,YAC/B,OACE,QAACoB,EAAD,CAAMpB,WAAYA,EAAYqB,SAAS,GACpC,IAAIzB,GAAO0B,KAAI,SAACC,EAAWC,GAAZ,OACd,QAACC,EAAD,CAAUN,IAAKK,EAAOE,KAAMH,EAAII,QAAQ,EAAM3B,WAAYA,GAD5C,IAKrB,EAQKyB,EAA0C,SAAC,GAIrB,IAH1BC,EAGyB,EAHzBA,KACAC,EAEyB,EAFzBA,OACA3B,EACyB,EADzBA,WAEA,IAAK0B,EAAM,OAAO,KAElB,IAAME,EAAcD,GAAUD,EAAKG,MAAMC,OAAS,GAC5CC,EAAcJ,EAASD,EAAKM,KAAKL,OAASD,EAAKM,KAAKC,QACpDC,EACJH,GAAmD,IAApCI,OAAOC,KAAKL,GAAaD,QAAgBC,EAAYM,cAAgBF,OAEtF,OACE,QAACG,EAAD,CAAUC,GAAIb,EAAKc,KAAM,YAAU,UACjC,QAACC,EAAD,CAAMzC,WAAYA,IAChB,QAAC0C,EAAD,CAAgBf,OAAQA,EAAQ3B,WAAYA,GACzCkC,GAAe,QAAC,KAAD,CAAOS,IAAKZ,KAAkB,QAAC,KAAD,QAEhD,oBACE,QAACa,EAAD,CAAOhB,YAAaA,EAAa5B,WAAYA,GAC1C0B,EAAKG,QAER,QAACgB,EAAD,CAASlB,OAAQA,EAAQC,YAAaA,EAAa5B,WAAYA,GAC5D0B,EAAKoB,UAER,QAACC,EAAD,KACGrB,EAAKsB,KADR,MACiBtB,EAAKuB,WADtB,eAOT,EAmBKC,GALFC,EAAAA,GAAAA,QATiB,uEAcJ,0EAUXzC,GAAkB,iGAIpB,SAAA0C,GAAC,OAAIA,EAAEvD,sBAAwBqD,CAA9B,GAJmB,IAKpBC,EAAAA,GAAAA,QALoB,uEAUlBE,EAAW,SAAAD,GAAC,OAAIE,EAAAA,EAAAA,IAAJ,wDApCH,MAoCG,IApCH,MAoCG,gFAWdH,EAAAA,GAAAA,eAXc,6DAedA,EAAAA,GAAAA,OAfc,sKAwBZI,EAAc,SAAAH,GAAC,OAAIE,EAAAA,EAAAA,IAAJ,yKAUjBH,EAAAA,GAAAA,QAViB,uFAejBA,EAAAA,GAAAA,OAfiB,6FAoBHC,EAAEI,MAAMC,OAAOC,KApBZ,KAuBjBP,EAAAA,GAAAA,QAvBiB,mJA8BfQ,EAAe,SAACP,GAAD,OAA4BE,EAAAA,EAAAA,IAA3B,qBAGlBH,EAAAA,GAAAA,OAHkB,IAAD,kFAQHC,EAAEI,MAAMC,OAAOC,KARZ,KAWjBP,EAAAA,GAAAA,QAXkB,IAAD,qKAoBfS,EAAO,mEAKPxC,GAAI,sDAIW,SAAAgC,GAAC,MAAsB,UAAjBA,EAAEpD,WAAyB,gBAAkB,MAAlD,GAJZ,KAKN,SAAAoD,GAAC,MAAsB,UAAjBA,EAAEpD,WAAyBqD,EAAWO,CAA3C,GALK,KAQJnB,GAAI,mCACN,SAAAW,GAAC,MAAsB,SAAjBA,EAAEpD,WAAwBuD,EAAcI,CAA7C,GADK,KASJjB,GAAiB,mCAAW,SAACU,GAAD,gBAChCS,WAAYT,EAAEI,MAAMC,OAAOK,WAC3BC,SAAU,WACVC,UAAU,mCAAoC,SAAAZ,GAAC,OAAKA,EAAEzB,OAAS,IAAO,EAAvB,EAAtC,IACTsC,aAA+B,UAAjBb,EAAEpD,WAAyB,OAAS,EAClDS,WAAY,4EAEZ,UAAW,CACTyD,OAAQ,UAGTC,EAAAA,GAAAA,UAAsB,CACrBD,OAAQ,QACRD,aAAc,QAbgB,EAgB/BE,EAAAA,GAAAA,WAAuB,CACtBC,SAAU,SACVH,aAAc,EACdD,UAAW,OACXK,qBAAsB,MACtBC,oBAAqB,OArBS,IAAX,IA8BjB1B,GAAQ,OAAO2B,EAAAA,EAAAA,GAAP,sBAAoB,SAACnB,GAAD,gBAChCa,aAAcb,EAAExB,aAAgC,UAAjBwB,EAAEpD,WAAyB,OAAS,OACnEwE,WAAYpB,EAAEI,MAAMiB,MAAMC,MAC1BjE,WAAY,yBACZkE,aAAc,SACdC,gBAAiB,EACjBC,gBAAiB,WACjBC,QAAS,cACTC,WAAY,SACZX,SAAU,WAETD,EAAAA,GAAAA,WAAuB,CACtBa,QAAS,iBAZqB,EAc/Bb,EAAAA,GAAAA,UAAsB,CACrBc,SAAU,OACVhB,aAAc,QAhBgB,IAApB,IA0BRpB,GAAU,iCAAS,SAACO,GAAD,gBACvB6B,SAAU,OACVhB,aAAc,OACdiB,MAAO9B,EAAEI,MAAMC,OAAO0B,KACtBL,QAAS1B,EAAExB,aAAgC,UAAjBwB,EAAEpD,WAAyB,OAAS,MAC9DoF,SAAUhC,EAAEzB,OAAS,QAAU,UAE9BwC,EAAAA,GAAAA,WAAuB,CACtBW,QAAS,eARY,EAWtBX,EAAAA,GAAAA,WAAuB,CACtBF,aAAc,QAZO,EAetBE,EAAAA,GAAAA,WAAuB,CACtBiB,SAAU,OACVJ,QAAS,SACTf,aAAc,OACdW,gBAAiB,GAnBI,IAAT,IAuBV7B,GAAW,mCAAW,SAACK,GAAD,gBAC1B6B,SAAU,OACVC,MAAM,GAAI9B,EAAEI,MAAMC,OAAO0B,KACzBE,QAAS,MAERlB,EAAAA,GAAAA,WAAuB,CACtBiB,SAAU,OACVJ,QAAS,eAPe,IAAX,IAWX1C,GAAW,OAAOgD,EAAAA,KAAP,sBAAa,SAAClC,GAAD,kBAC5BW,SAAU,WACVe,QAAS,QACTS,MAAO,OACPrB,OAAQ,OACRsB,IAAK,EACLC,KAAM,EACNC,cAAe,OACfC,aAAc,MACdC,OAAQ,EACRnF,WAAY,0CAVgB,WAYhBiC,EAZgB,aAYWA,GAAmB,CACxDmD,UAAW,mBACX7B,UAAW,+EAde,4BAiBA,CAC1BkB,MAAM,GAAI9B,EAAEI,MAAMC,OAAOqC,QAlBC,sCAqBU,CACpCC,QAAS,MACThC,SAAU,WACV0B,KAAM,QACND,IAAK,MACLD,MAAO,OACPrB,OAAQ,OACR8B,OAAO,aAAc5C,EAAEI,MAAMC,OAAOqC,OACpCjC,WAAW,4BACX8B,aAAa,OA9Ba,EAiC3BxB,EAAAA,GAAAA,aAjC2B,iBAkCdzB,GAAmB,CAC7BmD,UAAW,OACX7B,UAAW,WApCa,EAuC1B,YAAY,CACV6B,UAAW,+BAxCa,OAAb,G","sources":["webpack://TAOA/./src/sections/posts/Posts.List.tsx"],"sourcesContent":["import { GridLayoutContext } from './Posts.List.Context';\n\nimport FadeTransition from '@components/FadeTransition';\nimport Headings from '@components/Headings';\nimport Image, { ImagePlaceholder } from '@components/Image';\nimport mediaqueries, { mediaquery } from '@styles/media';\nimport { IPost, ITAOAThemeUIContext } from '@types';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { Link, graphql, useStaticQuery } from 'gatsby';\nimport React, { useContext } from 'react';\n\n/**\n * Tiles\n * [LONG], [SHORT]\n * [SHORT], [LONG]\n * [SHORT], [LONG]\n *\n * or ------------\n *\n * Rows\n * [LONG]\n * [LONG]\n * [LONG]\n */\n\ninterface IPostsListProps {\n  posts: IPost[];\n  alwaysShowAllDetails?: boolean;\n  currentPage?: number;\n  searching?: boolean;\n}\n\nconst siteQuery = graphql`\n  {\n    allSite {\n      edges {\n        node {\n          siteMetadata {\n            transition {\n              gridRowAnimationDurationSeconds\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst PostsList: React.FC<IPostsListProps> = ({\n  posts,\n  alwaysShowAllDetails,\n  currentPage,\n  searching\n}: IPostsListProps) => {\n  if (!posts) return null;\n\n  const { gridLayout } = useContext(GridLayoutContext);\n  const { gridRowAnimationDurationSeconds } =\n    useStaticQuery(siteQuery).allSite.edges[0].node.siteMetadata.transition;\n\n  /*\n   * Three transitions are here for three possible interactions that\n   * can affect the visibility of the posts.\n   * 1. Change from grid layout to row layout\n   * 2. Change of page\n   * 3. Searching for an post\n   */\n  return (\n    <PostsListContainer alwaysShowAllDetails={alwaysShowAllDetails}>\n      <FadeTransition\n        animatePresenceProps={{ initial: false, exitBeforeEnter: true }}\n        motionKey={currentPage}\n        duration={gridRowAnimationDurationSeconds}\n      >\n        <FadeTransition\n          animatePresenceProps={{ exitBeforeEnter: true }}\n          motionKey={gridLayout}\n          duration={gridRowAnimationDurationSeconds}\n        >\n          <FadeTransition\n            animatePresenceProps={{ exitBeforeEnter: true }}\n            motionKey={gridLayout}\n            duration={gridRowAnimationDurationSeconds}\n            motionProps={{\n              animate: searching ? 'exit' : 'enter'\n            }}\n          >\n            <ListLayoutContainer key={gridLayout} gridLayout={gridLayout} posts={posts} />\n          </FadeTransition>\n        </FadeTransition>\n      </FadeTransition>\n    </PostsListContainer>\n  );\n};\n\nexport default PostsList;\n\ninterface IListLayoutContainerProps {\n  posts: any;\n  gridLayout: any;\n}\n\nconst ListLayoutContainer: React.FC<IListLayoutContainerProps> = ({\n  posts,\n  gridLayout,\n  ...props\n}: IListLayoutContainerProps) => {\n  return (\n    <List gridLayout={gridLayout} reverse={true}>\n      {[...posts].map((ap: IPost, index: number) => (\n        <ListItem key={index} post={ap} narrow={true} gridLayout={gridLayout} />\n      ))}\n    </List>\n  );\n};\n\ninterface IPostsListItemProps {\n  post: IPost;\n  narrow?: boolean;\n  gridLayout: string;\n}\n\nconst ListItem: React.FC<IPostsListItemProps> = ({\n  post,\n  narrow,\n  gridLayout\n}: IPostsListItemProps) => {\n  if (!post) return null;\n\n  const hasOverflow = narrow && post.title.length > 35;\n  const imageSource = narrow ? post.hero.narrow : post.hero.regular;\n  const hasHeroImage =\n    imageSource && Object.keys(imageSource).length !== 0 && imageSource.constructor === Object;\n\n  return (\n    <PostLink to={post.slug} data-a11y=\"false\">\n      <Item gridLayout={gridLayout}>\n        <ImageContainer narrow={narrow} gridLayout={gridLayout}>\n          {hasHeroImage ? <Image src={imageSource} /> : <ImagePlaceholder />}\n        </ImageContainer>\n        <div>\n          <Title hasOverflow={hasOverflow} gridLayout={gridLayout}>\n            {post.title}\n          </Title>\n          <Excerpt narrow={narrow} hasOverflow={hasOverflow} gridLayout={gridLayout}>\n            {post.excerpt}\n          </Excerpt>\n          <MetaData>\n            {post.date} Â· {post.timeToRead} min read\n          </MetaData>\n        </div>\n      </Item>\n    </PostLink>\n  );\n};\n\nconst wide = '1fr';\nconst narrow = '1fr';\n\nconst limitToTwoLines = css`\n  text-overflow: ellipsis;\n  overflow-wrap: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  display: -webkit-box;\n  white-space: normal;\n  overflow: hidden;\n\n  ${mediaqueries.phablet`\n                       -webkit-line-clamp: 3;\n`}\n`;\n\nconst showDetails = css`\n  p {\n    display: -webkit-box;\n  }\n\n  h2 {\n    margin-bottom: 10px;\n  }\n`;\n\nconst PostsListContainer = styled.div<{ alwaysShowAllDetails?: boolean }>`\n  transition: opacity 0.25s;\n  padding-top: 20px;\n  min-height: 300px;\n  ${p => p.alwaysShowAllDetails && showDetails}\n  ${mediaqueries.phablet`\n                       padding: 0px 5px;\n`}\n`;\n\nconst listTile = p => css`\n  position: relative;\n  display: grid;\n  grid-template-columns: ${narrow} ${narrow};\n  grid-template-rows: 2;\n  column-gap: 60px;\n\n  &:not(:last-child) {\n    margin-bottom: 75px;\n  }\n\n  ${mediaqueries.desktop_medium`\ngrid-template-columns: 1fr 1fr;\n`}\n\n  ${mediaqueries.tablet`\ngrid-template-columns: 1fr;\n\n                  &:not(:last-child) {\n                      margin-bottom: 0;\n                  }\n`}\n`;\n\nconst listItemRow = p => css`\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-template-columns: 1fr 400px;\n  grid-column-gap: 80px;\n  grid-template-rows: 1;\n  align-items: center;\n  position: relative;\n  margin-bottom: 20px;\n\n  ${mediaqueries.desktop`\ngrid-column-gap: 24px;\ngrid-template-columns: 1fr 380px;\n`}\n\n  ${mediaqueries.tablet`\ngrid-template-columns: 1fr;\n`}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\nbox-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\nborder-bottom-right-radius: 5px;\nborder-bottom-left-radius: 5px;\n`}\n`;\n\nconst listItemTile = (p: ITAOAThemeUIContext) => css`\n  position: relative;\n\n  ${mediaqueries.tablet`\nmargin-bottom: 60px;\n`}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\nmargin-bottom: 40px;\nbox-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\nborder-bottom-right-radius: 5px;\nborder-bottom-left-radius: 5px;\n`}\n`;\n\n// If only 1 post, dont create 2 rows.\nconst listRow = css`\n  display: grid;\n  grid-template-rows: '1fr 1fr';\n`;\n\nconst List = styled.div<{\n  reverse: boolean;\n  gridLayout: string;\n}>`\n  justify-content: ${p => (p.gridLayout === 'tiles' ? 'space-between' : 'none')};\n  ${p => (p.gridLayout === 'tiles' ? listTile : listRow)}\n`;\n\nconst Item = styled.div<{ gridLayout: string }>`\n  ${p => (p.gridLayout === 'rows' ? listItemRow : listItemTile)}\n`;\n\ninterface IImageContainerProps extends ITAOAThemeUIContext {\n  narrow: boolean;\n  gridLayout: string;\n}\n\nconst ImageContainer = styled.div((p: IImageContainerProps) => ({\n  background: p.theme.colors.invPrimary,\n  position: 'relative',\n  boxShadow: `0 30px 60px -10px rgba(0, 0, 0, ${p => (p.narrow ? 0.22 : 0.3)})`,\n  marginBottom: p.gridLayout === 'tiles' ? '30px' : 0,\n  transition: 'transform 0.3s var(--ease-out-quad), box-shadow 0.3s var(--ease-out-quad)',\n\n  '& > div': {\n    height: '100%'\n  },\n\n  [mediaquery.tablet()]: {\n    height: '200px',\n    marginBottom: '35px'\n  },\n\n  [mediaquery.phablet()]: {\n    overflow: 'hidden',\n    marginBottom: 0,\n    boxShadow: 'none',\n    borderTopRightRadius: '5px',\n    borderTopLeftRadius: '5px'\n  }\n}));\n\ninterface ITitleProps extends ITAOAThemeUIContext {\n  hasOverflow: boolean;\n  gridLayout: string;\n}\n\nconst Title = styled(Headings.h2)((p: ITitleProps) => ({\n  marginBottom: p.hasOverflow && p.gridLayout === 'tiles' ? '35px' : '10px',\n  fontFamily: p.theme.fonts.serif,\n  transition: 'color 0.3s ease-in-out',\n  overflowWrap: 'normal',\n  WebkitLineClamp: 2,\n  WebkitBoxOrient: 'vertical',\n  display: '-webkit-box',\n  WhiteSpace: 'normal',\n  overflow: 'hidden',\n\n  [mediaquery.phablet()]: {\n    padding: '20px 20px 0px'\n  },\n  [mediaquery.tablet()]: {\n    fontSize: '22px',\n    marginBottom: '10px'\n  }\n}));\n\ninterface IExcerptProps extends ITAOAThemeUIContext {\n  hasOverflow: boolean;\n  narrow: boolean;\n  gridLayout: string;\n}\n\nconst Excerpt = styled.p((p: IExcerptProps) => ({\n  fontSize: '16px',\n  marginBottom: '10px',\n  color: p.theme.colors.grey,\n  display: p.hasOverflow && p.gridLayout === 'tiles' ? 'none' : 'box',\n  maxWidth: p.narrow ? '415px' : '515px',\n\n  [mediaquery.desktop()]: {\n    display: '-webkit-box'\n  },\n\n  [mediaquery.phablet()]: {\n    marginBottom: '15px'\n  },\n\n  [mediaquery.phablet()]: {\n    maxWidth: '100%',\n    padding: '0 20px',\n    marginBottom: '10px',\n    WebkitLineClamp: 3\n  }\n}));\n\nconst MetaData = styled.div((p: ITAOAThemeUIContext) => ({\n  fontSize: '16px',\n  color: `${p.theme.colors.grey}`,\n  opacity: 0.33,\n\n  [mediaquery.phablet()]: {\n    maxWidth: '100%',\n    padding: '0 20px 20px'\n  }\n}));\n\nconst PostLink = styled(Link)((p: ITAOAThemeUIContext) => ({\n  position: 'relative',\n  display: 'block',\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  paddingBottom: '30px',\n  borderRadius: '5px',\n  zIndex: 1,\n  transition: 'transform 0.33s var(--ease-out-quart)',\n\n  [`&:hover ${ImageContainer}, &:focus ${ImageContainer}`]: {\n    transform: 'translateY(-1px)',\n    boxShadow: '0 50px 80px -20px rgba(0, 0, 0, 0.27), 0 30px 50px -30px rgba(0, 0, 0, 0.3)'\n  },\n\n  [`&:hover h2, &:focus h2`]: {\n    color: `${p.theme.colors.accent}`\n  },\n\n  [`&[data-a11y='true']:focus::after`]: {\n    content: '\" \"',\n    position: 'absolute',\n    left: '-1.5%',\n    top: '-2%',\n    width: '103%',\n    height: '104%',\n    border: `3px solid ${p.theme.colors.accent}`,\n    background: `rgba(255, 255, 255, 0.01)`,\n    borderRadius: `5px`\n  },\n\n  [mediaquery.phablet()]: {\n    [`&:hover ${ImageContainer}`]: {\n      transform: 'none',\n      boxShadow: 'initial'\n    },\n\n    '&:active': {\n      transform: 'scale(0.97) translateY(3px)'\n    }\n  }\n}));\n\n/* const PostLink = styled(Link)`\n *   position: relative;\n *   display: block;\n *   width: 100%;\n *   height: 100%;\n *   top: 0;\n *   left: 0;\n *   padding-bottom: 30px;\n *   border-radius: 5px;\n *   z-index: 1;\n *   transition: transform 0.33s var(--ease-out-quart);\n *   -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n *\n *   &:hover ${ImageContainer}, &:focus ${ImageContainer} {\n *     transform: translateY(-1px);\n *     box-shadow: 0 50px 80px -20px rgba(0, 0, 0, 0.27), 0 30px 50px -30px rgba(0, 0, 0, 0.3);\n *   }\n *\n *   &: hover h2;\n *   &:focus h2 {\n *     color: ${p => p.theme.colors.accent};\n *   }\n *\n *   &[data-a11y='true']:focus::after {\n *     content: '\" \"';\n *     position: absolute;\n *     left: -1.5%;\n *     top: -2%;\n *     width: 103%;\n *     height: 104%;\n *     border: 3px solid ${p => p.theme.colors.accent};\n *     background: rgba(255, 255, 255, 0.01);\n *     border-radius: 5px;\n *   }\n *\n *   ${mediaqueries.phablet`\n *                    &:hover ${ImageContainer} {\n *                        transform: none;\n *                        box-shadow: initial;\n *                    }\n *\n *                    &:active {\n *                        transform: scale(0.97) translateY(3px);\n *                    }\n * `}\n * `; */\n"],"names":["posts","alwaysShowAllDetails","currentPage","searching","gridLayout","useContext","GridLayoutContext","gridRowAnimationDurationSeconds","useStaticQuery","allSite","edges","node","siteMetadata","transition","PostsListContainer","animatePresenceProps","initial","exitBeforeEnter","motionKey","duration","motionProps","animate","ListLayoutContainer","key","List","reverse","map","ap","index","ListItem","post","narrow","hasOverflow","title","length","imageSource","hero","regular","hasHeroImage","Object","keys","constructor","PostLink","to","slug","Item","ImageContainer","src","Title","Excerpt","excerpt","MetaData","date","timeToRead","showDetails","mediaqueries","p","listTile","css","listItemRow","theme","colors","card","listItemTile","listRow","background","invPrimary","position","boxShadow","marginBottom","height","mediaquery","overflow","borderTopRightRadius","borderTopLeftRadius","Headings","fontFamily","fonts","serif","overflowWrap","WebkitLineClamp","WebkitBoxOrient","display","WhiteSpace","padding","fontSize","color","grey","maxWidth","opacity","Link","width","top","left","paddingBottom","borderRadius","zIndex","transform","accent","content","border"],"sourceRoot":""}