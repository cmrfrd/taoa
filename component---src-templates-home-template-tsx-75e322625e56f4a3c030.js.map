{"version":3,"sources":["webpack://TAOA/./src/components/Name/Name.tsx","webpack://TAOA/./src/sections/posts/Hero.tsx","webpack://TAOA/./src/templates/home.template.tsx"],"names":["name","useStaticQuery","site","siteMetadata","siteName","base","p","color","theme","colors","primary","fontFamily","fonts","serif","marginTop","overflow","display","padding","Nameh1","Headings","hero","home","edges","node","Section","HeadingContainer","style","maxWidth","HeroHeading","Name","heading","Horizontal","position","margin","borderBottom","horizontalNav","mediaqueries","paddingTop","paddingBottom","mediaquery","width","fontStyle","fontWeight","lineHeight","fontSize","accent","location","pageContext","homePageData","numberOfPosts","morePostsText","postsHeadingText","postsToShow","posts","slice","Loading","SEO","pathname","narrow","Container","PostsHeading","LinkContainer","Link","to","text","bottom","left","zIndex","transition","colorModeTransition","a","flexDirection","textAlign"],"mappings":"mPAiBMA,EAAO,kBAAcC,oBAVZ,cAUsCC,KAAKC,aAAaC,UAEjEC,EAAO,SAACC,GAAD,MAAyC,CACpDC,MAAM,GAAID,EAAEE,MAAMC,OAAOC,QACzBC,WAAW,GAAIL,EAAEE,MAAMI,MAAMC,MAC7BC,UAAW,OACXC,SAAU,OACVC,QAAS,SACTC,QAAS,qBA4BX,EAzBqB,WACnB,IAAMC,GAAS,OAAOC,OAAP,qBAAoBd,EAApB,IACf,OAAO,QAACa,EAAD,KAASlB,M,qBCiBlB,EAhBuB,WACrB,IAAQoB,GAASnB,oBAlBA,cAkB8BoB,KAAKC,MAAM,GAAGC,KAAKF,KAA1DD,KAER,OACE,QAACI,EAAA,EAAD,MACE,QAACC,EAAD,CAAkBC,MAAO,CAAEC,SAAaP,EAAKO,SAAV,QACjC,QAACC,EAAD,MACE,QAACC,EAAD,QAEF,QAACD,EAAD,KAAcR,EAAKU,WAErB,QAACC,EAAD,QAOAA,GAAa,oCAAW,SAACzB,GAAD,MAA6B,CACzD0B,SAAU,WACVC,OAAQ,iBACRC,aAAa,aAAc5B,EAAEE,MAAMC,OAAO0B,iBAHzB,IAkCbV,IA5BmB,wHAMrBW,aANqB,kDAUrBA,YAVqB,kDAcrBA,aAdqB,8CAmBE,sEAIvBA,YAJuB,8CASF,wCACvBH,OAAQ,aACRI,WAAY,QACZC,cAAe,QACfN,SAAU,aAETO,gBAAuB,CACtBC,MAAO,MACPH,WAAY,QACZC,cAAe,SATM,EAYtBC,eAAsB,CACrBC,MAAO,QAbc,EAgBtBD,gBAAuB,CACtBC,MAAO,OACPH,WAAY,QACZC,cAAe,SAnBM,EAsBtBC,oBAA2B,CAC1BC,MAAO,OACPH,WAAY,QACZC,cAAe,SAzBM,EA4BtBC,cAAqB,CACpBC,MAAO,OACPH,WAAY,OACZC,cAAe,QA/BM,QAmCnBV,GAAc,oCAAW,SAACtB,GAAD,gBAC7BK,WAAW,GAAI,SAAAL,GAAC,OAAIA,EAAEE,MAAMI,MAAMC,OAClC4B,UAAW,SACXC,WAAY,IACZC,WAAY,KACZ7B,UAAW,OACX8B,SAAU,OACVrC,MAAM,GAAID,EAAEE,MAAMC,OAAOC,QACzB,EAAK,CACHH,MAAM,GAAID,EAAEE,MAAMC,OAAOoC,UAG1BN,gBAAuB,CACtBK,SAAU,QAbiB,EAgB5BL,eAAsB,CACrBK,SAAU,QAjBiB,EAoB5BL,gBAAuB,CACtBK,SAAU,QArBiB,IAAX,I,4CCxEpB,EA7B2B,SAAC,GAA0C,IAAxCE,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,YACtC,EAIIA,EAAYC,aAAa1B,MAAM,GAAGC,KAAKF,KAHzC4B,EADF,EACEA,cACAC,EAFF,EAEEA,cACAC,EAHF,EAGEA,iBAIIC,EADYL,EAAVM,MACkBC,MAAM,EAAGL,GAEnC,OACE,QAACM,EAAA,EAAD,MACE,QAACC,EAAA,EAAD,CAAKC,SAAUX,EAASW,YACxB,QAAC,EAAD,OACA,QAACjC,EAAA,EAAD,CAASkC,QAAM,IACb,QAACC,EAAD,MACE,QAACC,EAAD,KAAeT,IACf,QAAC,IAAD,CAAWE,MAAOD,KAClB,QAACS,EAAD,MACE,QAAC,EAAAC,KAAD,CAAMC,GAAI,WACR,QAAC,KAAD,CAAcC,KAAMd,UAW5BS,GAAY,mCAAW,SAACrD,GAAD,MAA6B,CACxD0B,SAAU,WACViC,OAAQ,EACRC,KAAM,EACNC,OAAQ,EACR3B,MAAO,OACP4B,WAAY9D,EAAEE,MAAM6D,uBANJ,IASZT,GAAe,OAAOzC,OAAP,sBAAoB,SAACb,GAAD,gBACvCmC,UAAW,SACXG,SAAU,OACVD,WAAY,OACZpC,MAAM,GAAID,EAAEE,MAAMC,OAAOC,QACzB4B,cAAe,OAEfgC,EAAG,CACD/D,MAAM,GAAID,EAAEE,MAAMC,OAAOoC,UAG1BN,gBAAuB,CACtBK,SAAU,QAZ2B,EAetCL,gBAAuB,CACtBtB,QAAS,UAhB4B,IAApB,IA+Cf4C,GAAgB,uCACpB/C,UAAW,QACXE,QAAS,OACTuD,cAAe,QACdhC,gBAAuB,CACtBP,SAAU,WACVhB,QAAS,QACTwD,UAAW,UAPO","file":"component---src-templates-home-template-tsx-75e322625e56f4a3c030.js","sourcesContent":["import Headings from '@components/Headings';\nimport { ITAOAThemeUIContext, IStringMap } from '@types';\n\nimport styled from '@emotion/styled';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nconst nameQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        siteName\n      }\n    }\n  }\n`;\n\nconst name = (): string => useStaticQuery(nameQuery).site.siteMetadata.siteName;\n\nconst base = (p: ITAOAThemeUIContext): IStringMap => ({\n  color: `${p.theme.colors.primary}`,\n  fontFamily: `${p.theme.fonts.serif}`,\n  marginTop: '20px',\n  overflow: 'auto',\n  display: 'inline',\n  padding: '0 0px !important'\n});\n\nconst h1: React.FC = (): React.ReactElement => {\n  const Nameh1 = styled(Headings.h1)(base);\n  return <Nameh1>{name()}</Nameh1>;\n};\nconst h2: React.FC = (): React.ReactElement => {\n  const Nameh2 = styled(Headings.h2)(base);\n  return <Nameh2>{name()}</Nameh2>;\n};\nconst h3: React.FC = (): React.ReactElement => {\n  const Nameh3 = styled(Headings.h3)(base);\n  return <Nameh3>{name()}</Nameh3>;\n};\nconst h4: React.FC = (): React.ReactElement => {\n  const Nameh4 = styled(Headings.h4)(base);\n  return <Nameh4>{name()}</Nameh4>;\n};\nconst h5: React.FC = (): React.ReactElement => {\n  const Nameh5 = styled(Headings.h5)(base);\n  return <Nameh5>{name()}</Nameh5>;\n};\nconst h6: React.FC = (): React.ReactElement => {\n  const Nameh6 = styled(Headings.h6)(base);\n  return <Nameh6>{name()}</Nameh6>;\n};\n\nexport default {\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6\n};\n","import { GridLayoutContext } from './Posts.List.Context';\n\nimport Name from '@components/Name';\nimport Headings from '@components/Headings';\nimport Section from '@components/Section';\nimport Icons from '@icons';\nimport mediaqueries, { mediaquery } from '@styles/media';\nimport { ITAOAThemeUIContext } from '@types';\n\n\nimport styled from '@emotion/styled';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React, { useContext } from 'react';\n\nconst homeHeroQuery = graphql`\n  {\n    home: allHomeYaml {\n      edges {\n        node {\n          home {\n            hero {\n              heading\n              maxWidth\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst Hero: React.FC = () => {\n  const { hero } = useStaticQuery(homeHeroQuery).home.edges[0].node.home;\n\n  return (\n    <Section>\n      <HeadingContainer style={{ maxWidth: `${hero.maxWidth}px` }}>\n        <HeroHeading>\n          <Name.h1 />\n        </HeroHeading>\n        <HeroHeading>{hero.heading}</HeroHeading>\n      </HeadingContainer>\n      <Horizontal />\n    </Section>\n  );\n};\n\nexport default Hero;\n\nconst Horizontal = styled.div((p: ITAOAThemeUIContext) => ({\n  position: \"relative\",\n  margin: \"20px auto 20px\",\n  borderBottom: `1px solid ${p.theme.colors.horizontalNav}`\n}));\n\nconst SubheadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 100px;\n\n  ${mediaqueries.desktop`\nmargin-bottom: 80px;\n`};\n\n  ${mediaqueries.tablet`\nmargin-bottom: 60px;\n`};\n\n  ${mediaqueries.phablet`\ndisplay: none;\n`};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${mediaqueries.tablet`\ndisplay: none;\n`};\n`;\n\nconst HeadingContainer = styled.div({\n  margin: '100px auto',\n  paddingTop: '150px',\n  paddingBottom: '150px',\n  position: 'relative',\n\n  [mediaquery.desktop()]: {\n    width: '95%',\n    paddingTop: '120px',\n    paddingBottom: '120px'\n  },\n\n  [mediaquery.tablet()]: {\n    width: '100%'\n  },\n\n  [mediaquery.phablet()]: {\n    width: '100%',\n    paddingTop: '100px',\n    paddingBottom: '100px'\n  },\n\n  [mediaquery.phone_large()]: {\n    width: '100%',\n    paddingTop: '115px',\n    paddingBottom: '115px'\n  },\n\n  [mediaquery.phone()]: {\n    width: '100%',\n    paddingTop: '90px',\n    paddingBottom: '90px'\n  }\n});\n\nconst HeroHeading = styled.div((p: ITAOAThemeUIContext) => ({\n  fontFamily: `${p => p.theme.fonts.serif}`,\n  fontStyle: \"normal\",\n  fontWeight: 600,\n  lineHeight: 1.15,\n  marginTop: \"20px\",\n  fontSize: \"26px\",\n  color: `${p.theme.colors.primary}`,\n  \"a\": {\n    color: `${p.theme.colors.accent}`\n  },\n\n  [mediaquery.desktop()]: {\n    fontSize: '26px'\n  },\n\n  [mediaquery.tablet()]: {\n    fontSize: \"18px\"\n  },\n\n  [mediaquery.phablet()]: {\n    fontSize: \"18px\"\n  }\n}));\n","import Hero from '../sections/posts/Hero';\nimport PostsList from '../sections/posts/Posts.List';\n\nimport { MediumButton } from '@components/Button';\nimport Headings from '@components/Headings';\nimport LoadingContainer from '@components/Loading';\nimport SEO from '@components/SEO';\nimport Section from '@components/Section';\nimport { mediaquery, mediaqueryup } from '@styles/media';\nimport { Template, TTemplate, ITAOAThemeUIContext } from '@types';\n\nimport { css } from '@emotion/react';\nimport { SerializedStyles } from '@emotion/serialize';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport React from 'react';\n\nconst HomePage: Template = ({ location, pageContext }: TTemplate) => {\n  const {\n    numberOfPosts,\n    morePostsText,\n    postsHeadingText\n  } = pageContext.homePageData.edges[0].node.home;\n\n  const { posts } = pageContext;\n  const postsToShow = posts.slice(0, numberOfPosts);\n\n  return (\n    <LoadingContainer>\n      <SEO pathname={location.pathname} />\n      <Hero />\n      <Section narrow>\n        <Container>\n          <PostsHeading>{postsHeadingText}</PostsHeading>\n          <PostsList posts={postsToShow} />\n          <LinkContainer>\n            <Link to={'/posts'}>\n              <MediumButton text={morePostsText} />\n            </Link>\n          </LinkContainer>\n        </Container>\n      </Section>\n    </LoadingContainer>\n  );\n};\n\nexport default HomePage;\n\nconst Container = styled.div((p: ITAOAThemeUIContext) => ({\n  position: 'relative',\n  bottom: 0,\n  left: 0,\n  zIndex: 1,\n  width: '100%',\n  transition: p.theme.colorModeTransition\n}));\n\nconst PostsHeading = styled(Headings.h2)((p: ITAOAThemeUIContext) => ({\n  fontStyle: 'normal',\n  fontSize: '30px',\n  lineHeight: '1.15',\n  color: `${p.theme.colors.primary}`,\n  paddingBottom: '20px',\n\n  a: {\n    color: `${p.theme.colors.accent}`\n  },\n\n  [mediaquery.desktop()]: {\n    fontSize: '20px'\n  },\n\n  [mediaquery.phablet()]: {\n    padding: '0 10px'\n  }\n}));\n\nconst paginationItemMixin = (p: ITAOAThemeUIContext): SerializedStyles => css`\n  line-height: 1;\n  color: ${p.theme.colors.primary};\n  padding: 0;\n  width: 6.8rem;\n  height: 6.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-variant-numeric: tabular-nums;\n\n  ${mediaqueryup.desktop()} {\n    display: block;\n    width: auto;\n    height: auto;\n    padding: 2rem;\n\n    &:first-of-type {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n    }\n  }\n`;\n\nconst LinkContainer = styled.div({\n  marginTop: '100px',\n  display: 'flex',\n  flexDirection: 'row',\n  [mediaquery.phablet()]: {\n    position: 'relative',\n    display: 'block',\n    textAlign: 'center'\n  }\n});\n"],"sourceRoot":""}