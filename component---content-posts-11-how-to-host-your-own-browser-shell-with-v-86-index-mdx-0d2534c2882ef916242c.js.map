{"version":3,"file":"component---content-posts-11-how-to-host-your-own-browser-shell-with-v-86-index-mdx-0d2534c2882ef916242c.js","mappings":"2OAasBA,E,wEALTC,EAAe,SAAAC,GAC1BC,SAASC,KAAO,QACjB,EACYC,EAAe,CAAC,EAOvBC,GALgBN,EAKa,eALL,SAA6BO,GAEzD,OADAC,QAAQC,KAAK,aAAeT,EAAO,4EAC5B,cAASO,EACjB,GAGKG,EAAc,CAClBT,aAAAA,EACAI,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,QAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,6CAA+B,aAAGC,WAAW,IACzC,KAAQ,+BADmB,OAA/B,0KAIgC,aAAGA,WAAW,IAC1C,KAAQ,wCADoB,UAJhC,MAQA,eAAKC,QAAShB,EAAciB,MAAO,CACjC,QAAW,QACX,OAAU,kBAEX,QAACZ,EAAD,CAAca,KAAK,gBAAgBJ,QAAQ,mBAE5C,kJAEA,uRAIA,4KAEA,+DAAiD,gBAAMK,UAAU,aAAhB,QAAjD,8FACsD,gBAAMA,UAAU,aAAhB,UADtD,2BAGA,yEAA2D,aAAGJ,WAAW,IACrE,KAAQ,yCAD+C,kBAA3D,sNAMA,mLAEA,0IAEA,6CAGH,CAEDH,EAAWQ,gBAAiB,C","sources":["webpack://TAOA/./content/posts/11_how_to_host_your_own_browser_shell_with_v86/index.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/node/work/src/templates/post.template.tsx\";\nexport const clickHandler = e => {\n  location.href = \"/shell\";\n};\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst MediumButton = makeShortcode(\"MediumButton\");\nconst layoutProps = {\n  clickHandler,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Recently I rediscovered `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/copy/v86\"\n      }}>{`v86`}</a>{` and after browsing through the examples, I thought\nit would be cool to \"self host\" my own browser shell / OS. So I gave it a try\nand am happy to show TAOA Shell! [`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/cmrfrd/taoa.shell\"\n      }}>{`source`}</a>{`]`}</p>\n\n    <div onClick={clickHandler} style={{\n      \"display\": \"block\",\n      \"margin\": \"0px auto 0px\"\n    }}>\n     <MediumButton text=\"To TAOA Shell\" mdxType=\"MediumButton\" />\n    </div>\n    <p>{`With the amazingly simple interface of v86, anyone can have an extremely\naccessible OS in their browser for near zero cost!`}</p>\n    <p>{`This is possible because v86 emulates an x86 computer with WebAssembly and\nJavascript. Since these are just static assets, they can run in almost any\nbrowser and be hosted on a number of platforms, such GitHub pages, Netlify, and\nDigital Ocean, for free!`}</p>\n    <p>{`Now unfortunately the v86 emulator is slow compared to bare metal (sometimes a\n10-100x slowdown). But it's fast enough and usable for a lot of tasks!`}</p>\n    <p>{`Now not only is this cool, but there is a `}<span className=\"underline\">{`real`}</span>{` personal use case I care about,\nwhich is the ability to self host my side projects that `}<span className=\"underline\">{`aren't`}</span>{` naturally web\nbased.`}</p>\n    <p>{`For example: my last weekend side project was about `}<a parentName=\"p\" {...{\n        \"href\": \"file:///posts/Writing-a-Weaver-solver\"\n      }}>{`solving weaver`}</a>{`. Now if\npeople want to use the solver script, they'd have to copy the code, download the\nweaver graph, and run it. But now, with the click of a link, they can just try\nit in TAOA Shell to see it in action.`}</p>\n    <p>{`I didn't have to rewrite it into Javascript or host a server somewhere. Instead\nI just dump the code into TAOA Shell, and ‚ú®like magic‚ú® it's on the internet!`}</p>\n    <p>{`There's also the added benefit of this generalizing beyond python scripts to\nalmost anything that can run in Linux!`}</p>\n    <p>{`Thanks for reading! üôãüèº`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","clickHandler","e","location","href","_frontmatter","MediumButton","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","onClick","style","text","className","isMDXComponent"],"sourceRoot":""}